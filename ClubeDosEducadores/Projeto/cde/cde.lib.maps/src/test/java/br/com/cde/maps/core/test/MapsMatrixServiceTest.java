package br.com.cde.maps.core.test;

import static org.junit.Assert.*;

import java.util.concurrent.ThreadLocalRandom;

import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import org.springframework.boot.logging.log4j2.Log4J2LoggingSystem;

import br.com.cde.maps.core.MapsMatrixService;
import br.com.cde.maps.exceptions.EmptyValueException;
import br.com.cde.maps.exceptions.InvalidValueException;
import br.com.cde.maps.exceptions.LimitExceededException;
import br.com.cde.maps.model.MapsMatrixResult;
import br.com.cde.maps.model.StatusEnum;

public class MapsMatrixServiceTest {
	private MapsMatrixService service; 
	
	public MapsMatrixServiceTest() {
		service = new MapsMatrixService();
	}
	
	@BeforeClass
	public static void setUpBeforeClass() throws Exception {
	}

	@Before
	public void setUp() throws Exception {
	}

	@Test
	public void testGetDistancesWithTransitMode() {
		MapsMatrixResult result = null;
		try {
			result = service.getDistances(
					"08440330",
					new String[] {"08210-530", "02034000"}, 
					true);
		} catch (EmptyValueException | LimitExceededException | InvalidValueException e) {
			e.printStackTrace();
			fail(e.getMessage());
		}
		
		assertTrue(result.getRows().length > 0 && result.getRows()[0].getElements().length > 0);
	}
	@Test
	public void testGetDistancesWithoutTransitMode() {
		MapsMatrixResult result = null;
		try {
			result = service.getDistances(
					"08440330",
					new String[] {"08210-530", "02034000"}, 
					false);
		} catch (EmptyValueException | LimitExceededException | InvalidValueException e) {
			e.printStackTrace();
			fail(e.getMessage());
		}
		
		assertTrue(result.getRows().length > 0 && result.getRows()[0].getElements().length > 0);
	}

	@Test
	public void testGetDistancesMoreThanLimit() {
		MapsMatrixResult result = null;
		String[] locations = getLocationsTest();
		int indexCurrentLocation = 0;
		int jump = 0;
		
		
		try {
			int i = 0;
			while(i != -1) {
				System.out.println(++i * 25);
				long startTime = System.currentTimeMillis();
				
				
				if(indexCurrentLocation >= locations.length - 25) {
					indexCurrentLocation = 0;
					++jump;
				}
				
				result = getDistancesWithLimitDestinations(indexCurrentLocation++, locations, jump);
				
				long endTime   = System.currentTimeMillis();
				long totalTime = endTime - startTime;
				if(totalTime < 1000) {
					Thread.sleep(1200 - totalTime);
				}
				
				if(result.getRows().length == 0 ||
						result.GetStatusEnum() != StatusEnum.OK ||
						result.getRows()[0].getElements().length == 0 ||
						result.getRows()[0].getElements()[result.getRows()[0].getElements().length - 1].GetStatusEnum() != StatusEnum.OK) {
					i = -1;
				}
			}
			
		} catch (EmptyValueException | LimitExceededException | InvalidValueException | InterruptedException e) {
			e.printStackTrace();
			fail(e.getMessage());
		}
		
		assertTrue(result.getRows().length > 0 && result.getRows()[0].getElements().length > 0 && result.GetStatusEnum() == StatusEnum.OK);
	}

	private MapsMatrixResult getDistancesWithLimitDestinations(int i, String[] destinations, int jump)
			throws EmptyValueException, LimitExceededException, InvalidValueException {
		
		String[] destinationsFinal = new String[25];
		System.arraycopy(destinations, i+1, destinationsFinal, 0, 25);
		
		MapsMatrixResult result;
		result = service.getDistances(
				destinations[i + jump],
				destinationsFinal, 
				true);
		return result;
	}
	
//	private static String getOneDestination(int i) {
//		String[] destinations = new String[] {
//				"08210-530", 
//				"02034000", 
//				"05868-140", 
//				"03380-030", 
//				"03631-150", 
//				"08441-040", 
//				"03251-000", 
//				"09426-100", 
//				"02442-120", 
//				"06028-115", 
//				"08475-340", 
//				"07260-210", 
//				"08031-440", 
//				"08320-100", 
//				"08588-000", 
//				"06665-080", 
//				"03980-100", 
//				"07210-150", 
//				"08111-170", 
//				"03275-000", 
//				"03720-160", 
//				"08411-250", 
//				"03755-070",
//				"08257-080",
//				"08411-010"};
//		
//		return destinations[i];
//	}

	
	private static String[] getLocationsTest() {
		return new String[] {
			"-23.5388,-46.4085",
			"-23.5369,-46.406",
			"-23.7137,-46.6945",
			"-23.4849,-46.4225",
			"-23.5585,-46.4682",
			"-23.5995,-46.481",
			"-23.6342,-46.7428",
			"-23.511,-46.3839",
			"-23.5582,-46.4871",
			"-23.5078,-46.4352",
			"-23.5635,-46.7982",
			"-23.5244,-46.414",
			"-23.5023,-46.4751",
			"-23.4838,-46.7634",
			"-23.5013,-46.5246",
			"-23.5558,-46.4381",
			"-23.6485,-46.6047",
			"-23.5333,-46.1879",
			"-23.525,-46.4824",
			"-23.4522,-46.6036",
			"-23.5532,-46.5787",
			"-23.5392,-46.4069",
			"-23.3084,-46.7009",
			"-23.4901,-46.4721",
			"-23.5964,-46.4453",
			"-23.4966,-46.6748",
			"-23.3356,-46.7586",
			"-23.5765,-46.5288",
			"-23.5943,-46.4132",
			"-23.47,-46.6588",
			"-23.5333,-46.431",
			"-23.448,-46.6891",
			"-23.4837,-46.6736",
			"-23.5384,-46.4451",
			"-23.7526,-46.6737",
			"-23.4866,-46.5902",
			"-23.6334,-46.7762",
			"-23.4177,-46.7484",
			"-23.5989,-46.74",
			"-23.4363,-46.7286",
			"-23.4908,-46.4697",
			"-23.5238,-46.4077",
			"-23.5607,-46.9493",
			"-23.5083,-46.4779",
			"-23.7195,-46.6743",
			"-23.611,-46.5012",
			"-23.5275,-46.456",
			"-23.5414,-46.4353",
			"-23.4917,-46.3168",
			"-23.5547,-46.4844",
			"-23.544,-46.4242",
			"-23.7682,-46.7028",
			"-23.5448,-46.6073",
			"-23.6029,-46.8165",
			"-23.5238,-46.4217",
			"-23.5552,-46.3817",
			"-23.5243,-46.5845",
			"-23.5546,-46.629",
			"-23.591,-46.5521",
			"-23.4958,-46.4084",
			"-23.5447,-46.6189",
			"-23.6627,-46.6376",
			"-23.4686,-46.6575",
			"-23.6026,-46.5514",
			"-23.5928,-46.5373",
			"-23.4778,-46.659",
			"-23.548,-46.4951",
			"-23.4551,-46.7412",
			"-23.4999,-46.4867",
			"-23.4962,-46.7402",
			"-23.5976,-46.4198",
			"-23.6023,-46.4756",
			"-23.4859,-46.6805",
			"-23.6981,-46.7658",
			"-23.5824,-46.4029",
			"-23.691,-46.4964",
			"-23.5296,-46.393",
			"-23.5237,-46.4617",
			"-23.5887,-46.543",
			"-23.605,-46.5015",
			"-23.5369,-46.406",
			"-23.5008,-46.4987",
			"-23.5619,-46.5322",
			"-23.5567,-46.4818",
			"-23.5307,-46.4537",
			"-23.7473,-46.6684",
			"-23.5496,-46.6449",
			"-23.7172,-46.6845",
			"-23.582,-46.5825",
			"-23.5652,-46.4175",
			"-23.4885,-46.458",
			"-23.4091,-46.7605",
			"-23.4118,-46.7506",
			"-23.6301,-46.4654",
			"-23.4398,-46.7871",
			"-23.5047,-46.5676",
			"-23.552,-46.5273",
			"-23.3026,-46.7218",
			"-23.8557,-46.8059",
			"-23.5672,-46.3996",
			"-23.5666,-46.3996",
			"-23.5353,-46.4802",
			"-23.5225,-46.4244",
			"-23.6584,-46.7463",
			"-23.6584,-46.7463",
			"-23.6367,-46.5729",
			"-23.529,-46.4126",
			"-23.5416,-46.4869",
			"-23.4063,-46.8484",
			"-23.6056,-46.5166",
			"-23.5642,-46.6792",
			"-23.5585,-46.5927",
			"-23.5277,-46.3853",
			"-23.6566,-46.4444",
			"-23.4293,-46.7151",
			"-23.624,-46.7534",
			"-23.5906,-46.3968",
			"-23.5837,-46.3836",
			"-23.4954,-46.4604",
			"-23.7569,-46.7028",
			"-23.5691,-46.5128",
			"-23.4968,-46.3618",
			"-23.5364,-46.4172",
			"-23.5492,-46.4935",
			"-23.7171,-46.6859",
			"-23.5111,-46.3944",
			"-23.542,-46.6191",
			"-23.4524,-46.4498",
			"-23.4876,-46.4181",
			"-23.4949,-46.7459",
			"-23.579,-46.4838",
			"-23.6289,-46.8277",
			"-23.4088,-46.7361",
			"-23.5928,-46.7619",
			"-23.5366,-46.4004",
			"-23.5619,-46.5493",
			"-23.5371,-46.3666",
			"-23.5428,-46.4276",
			"-23.4426,-46.7272",
			"-23.5658,-46.4271",
			"-23.5462,-46.43",
			"-23.5143,-46.6266",
			"-23.6068,-46.5291",
			"-23.5749,-46.6142",
			"-23.5532,-46.3802",
			"-23.5529,-46.2611",
			"-23.5568,-46.4102",
			"-23.4292,-46.4297",
			"-23.7434,-46.6125",
			"-23.5672,-46.4201",
			"-23.6026,-46.7517",
			"-23.5694,-46.5171",
			"-23.5405,-46.4377",
			"-23.5152,-46.4214",
			"-23.5196,-46.5625",
			"-23.5019,-46.3604",
			"-23.4855,-46.6584",
			"-23.6773,-46.612",
			"-23.6853,-46.6814",
			"-23.4849,-46.6252",
			"-23.6593,-46.6161",
			"-23.6269,-46.6014",
			"-23.6037,-46.4177",
			"-23.5368,-46.5124",
			"-23.5536,-46.4712",
			"-23.5749,-46.6142",
			"-23.4628,-46.2957",
			"-23.4676,-46.6519",
			"-23.5559,-46.4377",
			"-23.4209,-46.473",
			"-23.5936,-46.7671",
			"-23.5456,-46.4979",
			"-23.5993,-46.444",
			"-23.5159,-46.48",
			"-23.5748,-46.5414",
			"-23.5105,-46.7538",
			"-23.5543,-46.3819",
			"-23.548,-46.4328",
			"-23.48,-46.5757",
			"-23.4874,-46.3797",
			"-23.5589,-46.4324",
			"-23.488,-46.4135",
			"-23.5041,-46.4628",
			"-23.5175,-46.4117",
			"-23.6272,-46.4733",
			"-23.5635,-46.6544",
			"-23.4824,-46.7011",
			"-23.5388,-46.4085",
			"-23.6344,-46.4452",
			"-23.6064,-46.4964",
			"-23.4999,-46.4064",
			"-23.6368,-46.4999",
			"-23.4557,-46.6552",
			"-23.4533,-46.6069",
			"-23.4938,-46.3813",
			"-23.4801,-46.4278",
			"-23.5068,-46.4377",
			"-23.4394,-46.7343",
			"-23.6454,-46.8192",
			"-23.6512,-46.7448",
			"-23.5496,-46.6501",
			"-23.6701,-46.7833",
			"-23.5773,-46.5285",
			"-23.4553,-46.6567",
			"-23.5287,-46.5515",
			"-23.5272,-46.4076",
			"-23.6074,-46.5353",
			"-23.7075,-46.4332",
			"-23.4744,-46.6446",
			"-23.5502,-46.7415",
			"-23.5907,-46.3995",
			"-23.4531,-46.4099",
			"-23.5125,-46.4235",
			"-23.6284,-46.4735",
			"-23.4437,-46.3243",
			"-23.5645,-46.9513",
			"-23.6159,-46.5158",
			"-23.4643,-46.4408",
			"-23.4914,-46.3812",
			"-23.5874,-46.5332",
			"-23.5031,-46.5299",
			"-23.5526,-46.4083",
			"-23.5105,-46.501",
			"-23.5532,-46.4291",
			"-23.5535,-46.4134",
			"-23.5325,-46.4438",
			"-23.5382,-46.4118",
			"-23.5465,-46.5146",
			"-23.6531,-46.6453",
			"-23.4547,-46.7454",
			"-23.6462,-46.5981",
			"-23.4538,-46.7136",
			"-23.6724,-46.7138",
			"-23.525,-46.5074",
			"-23.4366,-46.5504",
			"-23.6112,-46.4606",
			"-23.6576,-46.6139",
			"-23.4946,-46.6506",
			"-23.6543,-46.5609",
			"-23.5458,-46.5954",
			"-23.6588,-46.668",
			"-23.6425,-46.6018",
			"-23.5414,-46.2637",
			"-23.4982,-46.4957",
			"-23.5954,-46.5274",
			"-23.5492,-46.7628",
			"-23.4874,-46.3794",
			"-23.5646,-46.4076",
			"-23.5352,-46.5815",
			"-23.6229,-46.5073",
			"-23.5435,-46.2952",
			"-23.5314,-46.4583",
			"-23.5532,-46.4899",
			"-23.5418,-46.5048",
			"-23.5519,-46.4793",
			"-23.6196,-46.5555",
			"-23.527,-46.5357",
			"-23.5593,-46.3761",
			"-23.6106,-46.5473",
			"-23.5136,-46.6267",
			"-23.5489,-46.4329",
			"-23.5523,-46.5815",
			"-23.5026,-46.5772",
			"-23.5582,-46.4967",
			"-23.5937,-46.4222",
			"-23.5648,-46.5096",
			"-23.6143,-46.7801",
			"-23.5244,-46.4496",
			"-23.7033,-46.4997",
			"-23.5405,-46.6466",
			"-23.4678,-46.7205",
			"-23.5798,-46.4024",
			"-23.5222,-46.4322",
			"-23.4977,-46.3735",
			"-23.5168,-46.3883",
			"-23.6118,-46.6144",
			"-23.4586,-46.6245",
			"-23.5212,-46.4318",
			"-23.5275,-46.3846",
			"-23.557,-46.5594",
			"-23.5325,-46.3353",
			"-23.5528,-46.401",
			"-23.5707,-46.5095",
			"-23.3985,-46.7524",
			"-23.4829,-46.6969",
			"-23.5329,-46.4085",
			"-23.5483,-46.4199",
			"-23.4922,-46.38",
			"-23.6073,-46.4599",
			"-23.5904,-46.4384",
			"-23.4895,-46.3842",
			"-23.5054,-46.3076",
			"-23.6028,-46.6008",
			"-23.4699,-46.751",
			"-23.663,-46.7937",
			"-23.634,-46.7454",
			"-23.5183,-46.5176",
			"-23.5089,-46.4783",
			"-23.5466,-46.3926",
			"-23.634,-46.5924",
			"-23.5306,-46.4045",
			"-23.5721,-46.3947",
			"-23.521,-46.4006",
			"-23.4605,-46.5336",
			"-23.593,-46.4116",
			"-23.5874,-46.4958",
			"-23.515,-46.4221",
			"-23.5014,-46.4681",
			"-23.4984,-46.6069",
			"-23.4842,-46.5867",
			"-23.4942,-46.5056",
			"-23.5707,-46.5095",
			"-23.6114,-46.4705",
			"-23.6124,-46.4852",
			"-23.4967,-46.3866",
			"-23.5551,-46.4741",
			"-23.5268,-46.4071",
			"-23.4929,-46.3253",
			"-23.6501,-46.742",
			"-23.5269,-46.3843",
			"-23.519,-46.3854",
			"-23.5634,-46.4069",
			"-23.4707,-46.6729",
			"-23.5694,-46.6466",
			"-23.5489,-46.439",
			"-23.6758,-46.8033",
			"-23.4965,-46.7057",
			"-23.5784,-46.5367",
			"-23.5329,-46.4473",
			"-23.3196,-46.7662",
			"-23.5163,-46.5316",
			"-23.5329,-46.4218",
			"-23.5235,-46.4622",
			"-23.4903,-46.3834",
			"-23.7676,-46.6807",
			"-23.5582,-46.8129",
			"-23.5642,-46.5392",
			"-23.449,-46.5792",
			"-23.669,-46.5415",
			"-23.5158,-46.5242",
			"-23.5335,-46.9057",
			"-23.6454,-46.8192",
			"-23.5934,-46.5373",
			"-23.5624,-46.7895",
			"-23.4825,-46.5711",
			"-23.574,-46.7784",
			"-23.7319,-46.6987",
			"-23.5329,-46.4218",
			"-23.444,-46.5447",
			"-23.6746,-46.4739",
			"-23.5498,-46.4783",
			"-23.4959,-46.6894",
			"-23.5061,-46.3915",
			"-23.5322,-46.5984",
			"-23.6191,-46.5031",
			"-23.5247,-46.5917",
			"-23.5922,-46.4124",
			"-23.5217,-46.4319",
			"-23.5055,-46.4334",
			"-23.6032,-46.7915",
			"-23.5354,-46.762",
			"-23.6038,-46.4399",
			"-23.4928,-46.5054",
			"-23.6122,-46.4631",
			"-23.5492,-46.4886",
			"-23.5212,-46.4933",
			"-23.4906,-46.7445",
			"-23.4996,-46.5037",
			"-23.4761,-46.3907",
			"-23.569,-46.5487",
			"-23.5421,-46.2992",
			"-23.5854,-46.3835",
			"-23.5274,-46.4745",
			"-23.5546,-46.4843",
			"-23.7247,-46.6249",
			"-23.5441,-46.576",
			"-23.5585,-46.4225",
			"-23.4927,-46.6558",
			"-23.5972,-46.4451",
			"-23.5746,-46.557",
			"-23.6803,-46.7529",
			"-23.566,-46.4729",
			"-23.4738,-46.3041",
			"-23.6175,-46.5333",
			"-23.5001,-46.664",
			"-23.4842,-46.6234",
			"-23.6049,-46.5014",
			"-23.4541,-46.3425",
			"-23.5359,-46.5617",
			"-23.5841,-46.5266",
			"-23.6623,-46.6375",
			"-23.5922,-46.5283",
			"-23.4913,-46.6345",
			"-23.6211,-46.5016",
			"-23.4999,-46.7076",
			"-23.6297,-46.5016",
			"-23.4863,-46.3782",
			"-23.6384,-46.555",
			"-23.4716,-46.5762",
			"-23.5307,-46.4553",
			"-23.6669,-46.4842",
			"-23.5528,-46.817",
			"-23.6095,-46.4849",
			"-23.5529,-46.4338",
			"-23.4905,-46.4054",
			"-23.4812,-46.5874",
			"-23.4581,-46.5499",
			"-23.6278,-46.4272",
			"-23.6967,-46.5257",
			"-23.6263,-46.5128",
			"-23.4855,-46.7566",
			"-23.5856,-46.4046",
			"-23.5633,-46.4926",
			"-23.5448,-46.4162",
			"-23.4809,-46.6574",
			"-23.5218,-46.4528",
			"-23.4645,-46.57",
			"-23.3789,-46.7204",
			"-23.5338,-46.4453",
			"-23.4807,-46.4126",
			"-23.5681,-46.5108",
			"-23.5386,-46.4756",
			"-23.6092,-46.4519"
		};
	}
}
